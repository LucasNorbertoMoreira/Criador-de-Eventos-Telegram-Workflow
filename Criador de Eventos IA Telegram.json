{
  "name": "Criador de Eventos IA Telegram",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -272,
        0
      ],
      "id": "7ca2b014-c8a9-479e-a8b7-722959c190bd",
      "name": "Telegram Trigger",
      "webhookId": "92d25fe8-c7d9-47aa-a56f-b82ea5982362",
      "credentials": {
        "telegramApi": {
          "id": "jgTFLkAjlHR4c665",
          "name": "Assistente IA"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-pro-latest",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-pro-latest"
        },
        "messages": {
          "values": [
            {
              "content": "=Sua tarefa é extrair informações de um texto para criar um evento de calendário. Analise o texto do utilizador e retorne APENAS um objeto JSON. O JSON deve ter as seguintes chaves: \"titulo\", \"data\" (no formato AAAA-MM-DD) e \"hora\" (no formato HH:MM). A data de hoje é 26 de Julho de 2025.\n\nExemplo:\nTexto do Utilizador: \"Marcar reunião sobre N8N com a equipa na próxima sexta-feira às 14h\"\nSua Resposta:\n{\n  \"titulo\": \"Reunião sobre N8N com a equipa\",\n  \"data\": \"2025-08-01\",\n  \"hora\": \"14:00\"\n}\n\nTexto do Utilizador para analisar: \"{{$json.message.text}}\"\n\nAgora, forneça o objeto JSON para o texto do utilizador. Não inclua nenhuma outra palavra ou explicação na sua resposta, apenas o código JSON.\n\nLeve em conta que o dia de hoje é:{{ $today }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -48,
        0
      ],
      "id": "63b97963-82ec-4957-af33-eceb69265cb3",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "VYFYMaSnJY7FE5A0",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pega o item que vem do nó anterior (a resposta da IA)\nconst item = items[0];\n\n// Pega o texto bruto da resposta da IA\nconst rawText = item.json.content.parts[0].text;\n\n// Usa uma expressão regular para encontrar o bloco JSON,\n// independentemente de espaços ou quebras de linha extras.\nconst match = rawText.match(/\\{[\\s\\S]*\\}/);\n\n// Verifica se um bloco JSON foi encontrado\nif (match && match[0]) {\n  try {\n    // Tenta \"traduzir\" o texto JSON encontrado para dados reais\n    const parsedData = JSON.parse(match[0]);\n    // Devolve os dados organizados com sucesso\n    return [{ json: parsedData }];\n  } catch (error) {\n    // Se a \"tradução\" falhar, devolve um erro claro\n    return [{ json: { error: \"O texto encontrado não é um JSON válido.\", content: match[0] } }];\n  }\n}\n\n// Se nenhum bloco JSON for encontrado no texto\nreturn [{ json: { error: \"Nenhum bloco JSON encontrado na resposta da IA.\" } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        0
      ],
      "id": "3bf14bfb-cdb2-4f81-9d7a-debab34f20c5",
      "name": "Code"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "lucasnorbertomoreira@gmail.com",
          "mode": "list",
          "cachedResultName": "lucasnorbertomoreira@gmail.com"
        },
        "start": "={{$json.data}}T{{$json.hora}}:00-03:00",
        "end": "={{$json.data}}T{{$json.hora}}:00-03:00",
        "additionalFields": {
          "summary": "={{$json.titulo}}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        1232,
        -16
      ],
      "id": "0aae9d6f-0c57-4f66-a7f5-960f6bb52393",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "amSfNZoKicU2bzP4",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1440,
        -16
      ],
      "id": "b062318c-1b4a-4e90-85b2-cd9d78acec20",
      "name": "Wait",
      "webhookId": "583c0595-7393-44fc-8835-1ff3eb4f53cb"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=  Você vai verificar se os eventos foram marcados corretamente de acordo com esses parâmetros: Summary: {{ $json.summary }} Start:{{ $json.start.dateTime }}  End: {{ $json.end.dateTime }}. Se você encontrar, diga que o evento foi criado com sucesso! Se não, diga que não encontrou nenhum evento e que eu deveria rever o workflow. Não precisa dizer que encontrou, apenas que foi criado. Fale \"O evento \"(nome do evento)\" para dia XY/AZ às XY:ZA foi criado com sucesso!\" Se o horário for igual a 09:00, não coloque-o, é um horário padrão",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1648,
        -16
      ],
      "id": "839eb9d2-ecbc-46c1-a5d9-410a813461c8",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-pro-latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1648,
        192
      ],
      "id": "160541ff-ec7a-40e1-b7ae-78f689a3c6f4",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "VYFYMaSnJY7FE5A0",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2016,
        -16
      ],
      "id": "46d83612-31b1-42d0-8af2-3ff81cff0073",
      "name": "Send a text message",
      "webhookId": "4c7abe9c-5129-44c5-b100-222591be5790",
      "credentials": {
        "telegramApi": {
          "id": "jgTFLkAjlHR4c665",
          "name": "Assistente IA"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "lucasnorbertomoreira@gmail.com",
          "mode": "list",
          "cachedResultName": "lucasnorbertomoreira@gmail.com"
        },
        "eventId": "={{ $('Create an event').item.json.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1840,
        192
      ],
      "id": "7157f9ab-68b8-4fa3-ac97-a84ccc78d56e",
      "name": "Get an event in Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "amSfNZoKicU2bzP4",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "de911553-9fa4-403a-b1a5-dbd9089475fb",
              "leftValue": "={{ $json.hora }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "dc61e8f9-7171-4b0e-8830-cd66157cf2f6",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        0
      ],
      "id": "932c0f3c-0b32-4018-a9a6-55c06167c087",
      "name": "If"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    },
                    "id": "e6e4e15b-feeb-4bd5-9479-650f139b506f"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dac4cbd5-14ef-47a5-b418-f803d3dd143b",
                    "leftValue": "={{ $json.hora }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        704,
        112
      ],
      "id": "098fab3a-22f6-4040-b6bd-5bd9a9e44132",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03b53531-36c3-4d7e-9dca-3b951604db8d",
              "name": "data",
              "value": "={{ $today }}",
              "type": "string"
            },
            {
              "id": "5bc6a226-ac20-49f5-bac9-30c80658aec9",
              "name": "hora",
              "value": "={{ $('Code').item.json.hora }}",
              "type": "string"
            },
            {
              "id": "b64dfc25-9cea-4ad8-be22-9d3ce6be0e5a",
              "name": "titulo",
              "value": "={{ $('Code').item.json.titulo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        928,
        80
      ],
      "id": "298adc3e-d8f3-41ab-9b13-a7475fc081eb",
      "name": "Editar Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03b53531-36c3-4d7e-9dca-3b951604db8d",
              "name": "hora",
              "value": "09:00",
              "type": "string"
            },
            {
              "id": "e56ae8e7-f61f-42c1-ada0-ec53366b2fc8",
              "name": "titulo",
              "value": "={{ $json.titulo }}",
              "type": "string"
            },
            {
              "id": "570712e3-6142-4335-9e23-41dc732e80da",
              "name": "data",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        928,
        224
      ],
      "id": "aa60bf02-76eb-41e3-90c3-23788ca48576",
      "name": "Editar Hora"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create an event": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get an event in Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Editar Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Editar Hora",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editar Data": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Editar Hora": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d6f472e5-9af3-4a43-8d56-b944b2f577c5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "02b09b37f4a80947d5ee73523cb2395e857666552ba96202e35e42c6e92dc998"
  },
  "id": "VN1j6b28Mhrir55D",
  "tags": []
}